version: '3.6'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
    ipam:
      driver: default
      config:
      - subnet: 172.18.0.0/24

services:
    workspace:
      build:
        context: ./containers/workspace
        args:
          - PHP_VERSION=${PHP_VERSION}
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
          - TZ=${WORKSPACE_TIMEZONE}
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      tty: true
      stdin_open: true
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - WAIT_HOSTS=mysql:3306 #https://github.com/ufoscout/docker-compose-wait
        - WAIT_BEFORE_HOSTS=30
        - WAIT_HOSTS_TIMEOUT=600
      depends_on:
        - php-fpm
        - nginx
        - mysql
      networks:
        backend:
          ipv4_address: 172.18.0.2
    php-fpm:
      build:
        context: ./containers/php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      networks:
        backend:
          ipv4_address: 172.18.0.3
      links:
        - mysql:mysql
    nginx:
      build:
        context: ./containers/nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        backend:
          ipv4_address: 172.18.0.4
    mysql:
      build:
        context: ./containers/mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
          - MYSQL_PORT=${MYSQL_PORT}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        backend:
          ipv4_address: 172.18.0.5